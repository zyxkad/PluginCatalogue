{
  "url": "https://github.com/AnzhiZhang/MCDReforgedPlugins",
  "name": "MCDReforgedPlugins",
  "full_name": "AnzhiZhang/MCDReforgedPlugins",
  "html_url": "https://github.com/AnzhiZhang/MCDReforgedPlugins",
  "description": "MCDReforged Plugins",
  "archived": false,
  "stargazers_count": 93,
  "watchers_count": 93,
  "forks_count": 56,
  "readme": "# FastAPI\n\n[简体中文](https://github.com/AnzhiZhang/MCDReforgedPlugins/tree/master/src/fastapi_mcdr/readme_cn.md)\n\n> Provides HTTP API\n\n## Quick Start\n\nIn general, there are two things you need to do in your plugin:\n\n1. Check FastAPI's status when loading. If it's ready for registration, directly register the API.\n2. Register a listener for the ACCEPT event to register the API when it becomes acceptable.\n\nSpecifically, you need to add the following code:\n\n```python\ndef on_load(server, prev_module):\n    # register if fastapi_mcdr is ready\n    fastapi_mcdr = server.get_plugin_instance('fastapi_mcdr')\n    if fastapi_mcdr is not None and fastapi_mcdr.is_ready():\n        register_apis(server)\n\n    # register event listener\n    server.register_event_listener(\n        \"fastapi_mcdr.accept\",\n        register_apis\n    )\n\ndef register_apis(server):\n    # save plugin id and fastapi_mcdr instance\n    id_ = server.get_self_metadata().id\n    fastapi_mcdr = server.get_plugin_instance('fastapi_mcdr')\n\n    # register api\n    fastapi_mcdr.add_api_route(\n        id_,\n        path=\"/test\",\n        endpoint=test,\n        response_model=Dict[str, str],\n        methods=[\"GET\"],\n    )\n\nasync def test():\n    return \"Hello, world!\"\n```\n\nVisit <http://localhost:8080/docs> to view the API documentation.\n\n## Technical Details\n\n### Loading\n\nIn theory, providing an HTTP API externally should be a soft dependency. That's why checking FastAPI's status and registering an ACCEPT event listener are necessary. The following diagram illustrates the process of loading FastAPI and custom plugins:\n\nLoad FastAPI first, then load custom plugins:\n\n```mermaid\nsequenceDiagram\n    participant FastAPI\n    participant Test\n\n    Note right of FastAPI: FastAPI Load\n    Note right of FastAPI: FastAPI Dispatch ACCEPT Event\n\n    Note left of Test: Test Load\n\n    Test ->> FastAPI: Loaded?\n    FastAPI ->> Test: Yes!\n    Test ->> FastAPI: is_ready?\n    FastAPI ->> Test: Yes!\n    Test ->> FastAPI: Register API\n\n    Note left of Test: Test Register ACCEPT Event\n```\n\nLoad custom plugins first, then load FastAPI:\n\n```mermaid\nsequenceDiagram\n    participant FastAPI\n    participant Test\n\n    Note left of Test: Test Load\n\n    Test ->> FastAPI: Loaded?\n    FastAPI ->> Test: No!\n\n    Note left of Test: Test Register ACCEPT Event\n\n    Note right of FastAPI: FastAPI Load\n\n    FastAPI ->> Test: Dispatch ACCEPT Event\n    Test ->> FastAPI: Register API\n```\n\nWith this design, you can achieve soft plugin dependency without worrying about the order of plugin loading. The following diagram shows the scenario of any plugin being reloaded:\n\n```mermaid\nsequenceDiagram\n    participant FastAPI\n    participant Test\n\n    Note right of FastAPI: FastAPI Reload\n\n    FastAPI ->> Test: Dispatch ACCEPT Event\n    Test ->> FastAPI: Register API\n\n    Note left of Test: Test Reload\n\n    Test ->> FastAPI: Loaded?\n    FastAPI ->> Test: Yes!\n    Test ->> FastAPI: is_ready?\n    FastAPI ->> Test: Yes!\n    Test ->> FastAPI: Register API\n\n    Note left of Test: Test Register ACCEPT Event\n```\n\n## Standards\n\n### ACCEPT Event\n\nEvent name: `fastapi_mcdr.accept`\n\nAn instance of `PluginEvent` for this event is also exposed as `ACCEPT_EVENT`.\n\n### Public Functions\n\n#### is_ready\n\nThe plugin's status for accepting registration. If forcefully registered, it will raise a `RuntimeError`.\n\n#### add_api_route\n\nAccepts parameters almost identical to the `add_api_route` function of the fastapi library. However, the first parameter `plugin_id` should be the plugin id, so that the plugin id is used as a prefix when registering the path.\n\nIn other words, if the id parameter is `test` and the path parameter is `/test`, then the registered path is `/test/test`.\n",
  "readme_url": "https://raw.githubusercontent.com/AnzhiZhang/MCDReforgedPlugins/master/src/fastapi_mcdr/readme.md"
}