{
  "url": "https://github.com/Aimerny/MCDRPlugins",
  "name": "MCDRPlugins",
  "full_name": "Aimerny/MCDRPlugins",
  "html_url": "https://github.com/Aimerny/MCDRPlugins",
  "description": "Aimerny's MCDR plugins repository",
  "archived": false,
  "stargazers_count": 1,
  "watchers_count": 1,
  "forks_count": 0,
  "readme": "# KookAPI\n> 一个连接Kook和MCDR的API插件,通过Kook机器人事件代理服务将Kook服务器(频道)的事件接入MCDR\n\n## 功能介绍\n1. 实现了Kook文本事件的解析与转发.下游插件通过订阅该插件事件进行处理.(参考插件 -> [KookIn](https://github.com/Aimerny/KookIn))\n2. 实现发送频道消息的api,进行MC与Kook双向通信\n\n## 如何开始\n1. 启动Kook机器人事件代理服务[Elix](https://github.com/Aimerny/Elix)\n2. MCDR服务器启动并加载本插件\n3. 修改配置文件以连接到Elix服务\n\n## 配置项\n`$MCDR/config/kook_api/conf.json`\n\n| 配置项       | 配置说明            | 示例        |\n| --------- | --------------- | --------- |\n| kook_host | kook机器人代理地址     | 127.0.0.1 |\n| kook_port | kook机器人代理ws端口   | 9000      |\n| api_port  | kook机器人代理http端口 | 9001      |\n\n## 接入方式\n下游插件通过订阅 `kook_api.on_message`接收事件, 得到对应的 `message` 字面内容 + 完整的`event`数据\n\n\n### 示例代码:\n```python\ndef on_load(server: PluginServerInterface, old_plg):\n    server.register_event_listener('kook_api.on_message', on_message)\n\ndef on_message(server: PluginServerInterface, raw_content: str, event: Event):\n    server.logger.info(f\"kook message event received: {raw_content}, event: {event}\")\n```\n",
  "readme_url": "https://raw.githubusercontent.com/Aimerny/MCDRPlugins/main/src/kook_api/README.md"
}